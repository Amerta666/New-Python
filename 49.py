# # Планеты вращаются вокруг звезд по эллиптическим орбитам.
# # Назовем самой далекой планетой ту, орбита которой имеет самую большую площадь.
# # Напишите функцию find_farthest_orbit(list_of_orbits), которая среди списка орбит
# # планет найдет ту, по которой вращается самая далекая планета. Круговые орбиты не учитывайте:
# # вы знаете, что у вашей звезды таких планет нет, зато искусственные спутники
# # были запущены на круговые орбиты. Результатом функции должен быть кортеж, содержащий длины полуосей
# # эллипса орбиты самой далекой планеты. Каждая орбита представляет из себя кортеж из пары чисел - полуосей ее
# # эллипса. Площадь эллипса вычисляется по формуле S = pi*a*b, где a и b - длины полуосей эллипса.
# # При решении задачи используйте списочные выражения. Подсказка: проще всего будет найти эллипс в два шага:
# # сначала вычислить самую большую площадь эллипса, а затем найти и сам эллипс,
# # имеющий такую площадь. Гарантируется, что самая далекая планета ровно одна.
#
# Ввод:
# orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (4, 3)]
# print(*find_farthest_orbit(orbits))
#
# Вывод:
# 2.5 10

def find_farthest_orbit(list_of_orbits):
    max_orbit = 0
    list_s_orbits = [0, 0]
    for i in range(len(list_of_orbits)):
        a, b = list_of_orbits[i]
        if a != b:
            s = 3.14 * a * b
            if s > max_orbit:
                max_orbit = s
                list_s_orbits[0] = a
                list_s_orbits[1] = b
    return set(list_s_orbits)


orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (4, 3)]

print(find_farthest_orbit(orbits))
print(max(orbits, key=lambda x: (x[0] != x[1]) * x[0] * x[1]))